name: CICD-Develop

on:
  push:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.20']

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - uses: aws-actions/setup-sam@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - run: export GOOS=linux && export CGO_ENABLED=0 && export AWS_ACCESS_KEY_ID=${{ secrets.ACCESS_KEY }} && export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} && export AWS_DEFAULT_REGION='us-east-1' && sam build && sam deploy
#
#
#
#      - name: Install AWS dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install awscli
#      - name: Install GO dependencies
#        run: go get .
#      - name: Test with Go
#        run: go test -json > TestResults-${{ matrix.go-version }}.json
#      - name: Upload Go test results
#        uses: actions/upload-artifact@v3
#        with:
#          name: Go-results-${{ matrix.go-version }}
#          path: TestResults-${{ matrix.go-version }}.json
#      - name: Build GO
#        run: go build
#      - name: notify progress
#        if: always()
#        uses: 8398a7/action-slack@v3
#        with:
#          status: ${{ job.status }}
#          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
#          text: 'CICD DEVELOP ongoing... :eyes:'
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: 'us-east-1'
#
##      # Deploy to AWS CloudFormation
##      - name: Deploy to AWS CloudFormation
##        uses: aws-actions/aws-cloudformation-github-deploy@v1
##        with:
##          name: backend-site-dev-stack
##          template: template.yaml
##          no-fail-on-empty-changeset: "1"
##          parameter-overrides: "EC2InstanceType=t2.micro"
#
##      - name: "Create AWS Credentials"
##        run: |
##          mkdir ~/.aws
##          touch ~/.aws/credential
##          echo [default] > ~/.aws/credential
##          echo AWS_ACCESS_KEY_ID=${{ secrets.ACCESS_KEY }} > ~/.aws/credential
##          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> ~/.aws/credential
##          echo AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }} >> ~/.aws/credential
##          tail -n 100000 ~/.aws/credential
#      - name: Create package
#        run: export GOOS=linux && export CGO_ENABLED=0 && export AWS_ACCESS_KEY_ID=${{ secrets.ACCESS_KEY }} && export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} && export AWS_DEFAULT_REGION='us-east-1' && sam build && sam deploy
#
#      - name: notify progress
#        if: always()
#        uses: appleboy/discord-action@master
#        with:
#          webhook_id: ${{ secrets.WEBHOOK_ID }}
#          webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
#          message: "The deploy environment staging executed ${{ job.status }}"
