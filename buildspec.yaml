version: 0.2

env:
  variables:
    # This S3 bucket will be used to store the packaged Lambda deployment bundle.
    # Make sure to provide a valid S3 bucket name (it must exist already).
    # The AWS CodeBuild IAM role must allow write access to it.
    S3_BUCKET: "br.com.likwi.artifacts.apps.backend-site-dev"
    PACKAGE: "backend-site"

phases:

#  install:
#    runtimes-version:
#      # using golang
#      golang: 1.21

    commands:

      # AWS Codebuild Go images use /go for the $GOPATH so let's copy our
      # application source code into that directory structure.
      - echo running commands
      - mkdir -p "~/$(dirname ${PACKAGE})"
      - ln -s "${CODEBUILD_SRC_DIR}" "~/${PACKAGE}"

      # Print all environment variables (handy for AWS CodeBuild logs)
      - env

      # Install golint
      - go get -u github.com/golang/lint/golint

  pre_build:
    commands:
      - echo running pre build
      # Make sure we're in the project directory within our GOPATH
      - cd "~/{PACKAGE}"

      # Fetch all dependencies
      - go get -t ./...

      # Ensure code passes all lint tests
      - golint -set_exit_status

      # Check the Go code for common problems with 'go vet'
      - go vet ./...

      # Run all tests included with our application
      - go test ./...

  build:

    commands:
      - echo running build's command

      # Build our go application
      - go build -o main main.go

      # Package our application with AWS SAM
      - aws cloudformation package --template-file template.yml --s3-bucket ${S3_BUCKET} --output-template-file packaged.yml

artifacts:
  files:
    - packaged.yml